// SPDX-License-Identifier: MIT
pragma solidity >=0.8.21;

/* Autogenerated file. Do not edit manually. */

import { CardOnBoardsData, PlayersData, SlotData } from "./../index.sol";

/**
 * @title IGameLogicSystem
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface IGameLogicSystem {
  function GetAttack(CardOnBoardsData memory card) external pure returns (uint256);

  function GetHP(CardOnBoardsData memory card) external pure returns (uint256);

  function GetHPMax(CardOnBoardsData memory card) external pure returns (uint256);

  function GetMana(CardOnBoardsData memory card) external pure returns (uint256);

  function CanPayMana(PlayersData memory player, CardOnBoardsData memory card) external pure returns (bool);

  function PayMana(bytes32 player_key, bytes32 card_key) external;

  function CanPlayCard(
    PlayersData memory player,
    CardOnBoardsData memory card,
    SlotData memory slot,
    bool skip_cost
  ) external pure returns (bool);

  function CanMoveCard(
    PlayersData memory player,
    CardOnBoardsData memory card,
    SlotData memory slot
  ) external pure returns (bool);

  function CanAttackTarget(CardOnBoardsData memory card, CardOnBoardsData memory target) external pure returns (bool);

  function GameSetting(string memory game_uid) external returns (bytes32 key);

  function PlayerSetting(string memory username, string memory game_uid, string memory desk_id, bool is_ai) external;

  function PlayCard(bytes32 card_key, SlotData memory slot, bool skip_cost) external;

  function AttackTarget(bytes32 card_key, bytes32 target_key, uint8 slot) external;

  function AttackPlayer(bytes32 card_key, uint8 slot) external;

  function Move(bytes32 card_key, uint8 slot) external;

  function EndTurn(bytes32 card_key, uint8 slot) external;

  function ShuffleDeck(bytes32[] memory cards) external view returns (bytes32[] memory);

  function EndGame() external;

  function RemoveCardFromAllGroups(bytes32 player_key, bytes32 card_key) external;

  function UpdateOngoing() external;
}
